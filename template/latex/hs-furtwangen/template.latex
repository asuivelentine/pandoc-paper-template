\documentclass[$if(fontsize)$$fontsize$,$endif$$if(lang)$$babel-lang$,$endif$$if(papersize)$$papersize$,$endif$$for(classoption)$$classoption$$sep$,$endfor$]{$documentclass$}

\providecommand{\tightlist}{%
      \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}
}

\input{settings/variables}
\input{settings/commands}

$if(links-as-notes)$
    % Make links footnotes instead of hotlinks:
    \renewcommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$

$if(strikeout)$
    \usepackage[normalem]{ulem}
    % avoid problems with \sout in headers with hyperref:
    \pdfstringdefDisableCommands{\renewcommand{\sout}{}}
$endif$

$if(indent)$
$else$
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}
$endif$

$if(numbersections)$
  \setcounter{secnumdepth}{5}
$else$
  \setcounter{secnumdepth}{0}
$endif$

$if(dir)$
  \ifxetex
      % load bidi as late as possible as it modifies e.g. graphicx
      $if(latex-dir-rtl)$
          \usepackage[RTLdocument]{bidi}
      $else$
          \usepackage{bidi}
      $endif$
  \fi
  \ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
      \TeXXeTstate=1
      \newcommand{\RL}[1]{\beginR #1\endR}
      \newcommand{\LR}[1]{\beginL #1\endL}
      \newenvironment{RTL}{\beginR}{\endR}
      \newenvironment{LTR}{\beginL}{\endL}
  \fi
$endif$

$if(subparagraph)$
$else$
    % Redefines (sub)paragraphs to behave more like sections
    \ifx\paragraph\undefined\else
        \let\oldparagraph\paragraph
        \renewcommand{\paragraph}[1]{\oldparagraph{#1}\mbox{}}
    \fi

    \ifx\subparagraph\undefined\else
        \let\oldsubparagraph\subparagraph
        \renewcommand{\subparagraph}[1]{\oldsubparagraph{#1}\mbox{}}
    \fi
$endif$

$if(fontfamily)$
    \usepackage[$fontfamilyoptions$]{$fontfamily$}
$else$
    \usepackage{lmodern}
$endif$

$if(linestretch)$
    \usepackage{setspace}
    \setstretch{$linestretch$}
$endif$

\usepackage{ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
\usepackage{dingbat}
\usepackage{color}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage[hyphens]{url}
\usepackage[babel, german=quotes]{csquotes}
\usepackage{index}
\usepackage[toc]{glossaries}
\usepackage{mathtools}
\usepackage{tocloft}
\usepackage{caption}
\usepackage{wrapfig}
\usepackage{chngcntr}
\usepackage{fancyhdr}
\usepackage{bibgerm}
\usepackage[printonlyused]{acronym}

\makeindex

\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
    \usepackage[$if(fontenc)$$fontenc$$else$T1$endif$]{fontenc}
    \usepackage[utf8]{inputenc}

    $if(euro)$
        \usepackage{eurosym}
    $endif$

\else % if luatex or xelatex
    \ifxetex
        \usepackage{mathspec}
    \else
        \usepackage{fontspec}
    \fi

    \defaultfontfeatures{Ligatures=TeX,Scale=MatchLowercase}
    \newcommand{\euro}{â‚¬}

    $if(mainfont)$
        \setmainfont[$mainfontoptions$]{$mainfont$}
    $endif$

    $if(sansfont)$
        \setsansfont[$sansfontoptions$]{$sansfont$}
    $endif$

    $if(monofont)$
        \setmonofont[Mapping=tex-ansi$if(monofontoptions)$,$monofontoptions$$endif$]{$monofont$}
    $endif$

    $if(mathfont)$
        \setmathfont(Digits,Latin,Greek)[$mathfontoptions$]{$mathfont$}
    $endif$

    $if(CJKmainfont)$
        \usepackage{xeCJK}
        \setCJKmainfont[$CJKoptions$]{$CJKmainfont$}
    $endif$
\fi

% use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}

% use microtype if available
\IfFileExists{microtype.sty}{%
    \usepackage{microtype}
    \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}

$if(geometry)$
    \usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}
$endif$

\usepackage[
    colorlinks=false,
    linkcolor=black,
    citecolor=black,
    filecolor=black,
    urlcolor=black,
    bookmarks=true,
    bookmarksopen=true,
    bookmarksopenlevel=3,
    bookmarksnumbered,
    plainpages=false,
    pdfpagelabels=true,
    hyperfootnotes=true,
    pdftitle={\docTitle},
    %pdfauthor={\docFirstname~\docLastname},
    %pdfcreator={\docFirstname~\docLastname}
    ]{hyperref}

\PassOptionsToPackage{usenames,dvipsnames}{color} % color is loaded by hyperref

\hypersetup{breaklinks=true,
    unicode=true,$if(title-meta)$
    pdftitle={$title-meta$},$endif$$if(author-meta)$
    pdfauthor={$author-meta$},$endif$$if(subtitle)$
    pdfsubject={$subtitle$},$endif$$if(keywords)$
    pdfkeywords={$keywords$},$endif$
    colorlinks=true,
    citecolor=$if(citecolor)$$citecolor$$else$black$endif$,
    urlcolor=$if(urlcolor)$$urlcolor$$else$black$endif$,
    linkcolor=$if(linkcolor)$$linkcolor$$else$black$endif$,
    pdfborder={0 0 0}$if(hidelinks)$,
        hidelinks
    $endif$
}

\urlstyle{same}  % don't use monospace font for urls

$if(lang)$
    \ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
        \usepackage[shorthands=off,$for(babel-otherlangs)$$babel-otherlangs$$sep$,$endfor$,main=$babel-lang$]{babel}
        $babel-newcommands$
    \else
        \usepackage{polyglossia}
        \setmainlanguage[$polyglossia-lang.options$]{$polyglossia-lang.name$}
        $for(polyglossia-otherlangs)$
            \setotherlanguage[$polyglossia-otherlangs.options$]{$polyglossia-otherlangs.name$}
        $endfor$
    \fi
$endif$

$if(natbib)$
    \usepackage{natbib}
    \bibliographystyle{alphadin}
$endif$

$if(biblatex)$
    \usepackage{biblatex}
    $for(bibliography)$
    \addbibresource{$bibliography$}
    $endfor$
$endif$

$if(listings)$
    \usepackage{listings}
$endif$

$if(lhs)$
    \lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$

$if(highlighting-macros)$
    $highlighting-macros$
$endif$

$if(verbatim-in-note)$
    \usepackage{fancyvrb}
    \VerbatimFootnotes % allows verbatim text in footnotes
$endif$

$if(tables)$
    \usepackage{longtable,booktabs}
$endif$

$if(graphics)$
    \ifx\pdftexversion\undefined
        \usepackage[dvips]{graphicx}
    \else
        \usepackage[pdftex]{graphicx}
        \DeclareGraphicsRule{*}{mps}{*}{}
    \fi
    \usepackage{grffile}
    \makeatletter
    \def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
    \def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
    \makeatother
    % Scale images if necessary, so that they will not overflow the page
    % margins by default, and it is still possible to overwrite the defaults
    % using explicit options in \includegraphics[width, height, ...]{}
    \setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
$endif$

\usepackage{amssymb,amsmath}

$if(title)$
  \title{$title$$if(subtitle)$\\\vspace{0.5em}{\large $subtitle$}$endif$}
$endif$

$if(author)$
  \author{$for(author)$$author$$sep$ \and $endfor$}
$endif$

\date{$date$}

$for(header-includes)$
  $header-includes$
$endfor$

\input{settings}

\begin{document}
    \setcounter{secnumdepth}{3}

    \input{title}
    \cleardoubleemptypage
    \frontmatter

    $if(abstract)$
        \begin{abstract}
          $abstract$
        \end{abstract}
        \cleardoubleemptypage
    $endif$

    $if(slogan)$
        $slogan$
        \cleardoubleemptypage
    $endif$

    $for(include-before)$
        $include-before$
    $endfor$

    $if(toc)$
        {
            \hypersetup{linkcolor=$if(toccolor)$$toccolor$$else$black$endif$}
            \setcounter{tocdepth}{$toc-depth$}
            \addcontentsline{toc}{chapter}{Table of contents}
            \tableofcontents
            \cleardoubleemptypage
        }
    $endif$

    $if(lot)$
        \phantomsection
        \addcontentsline{toc}{chapter}{\listtablename}
        \listoftables
        \cleardoubleemptypage
    $endif$

    $if(lof)$
        \addcontentsline{toc}{chapter}{\listfigurename}
        \listoffigures
        \cleardoubleemptypage
    $endif$

    $if(lol)$
        \addcontentsline{toc}{chapter}{Listings}
        \lstlistoflistings
        \cleardoubleemptypage
    $endif$

    \mainmatter

    $body$
    \cleardoubleemptypage

    \glsaddall
    \printglossaries

    $if(natbib)$
        $if(bibliography)$
            $if(biblio-title)$
                $if(book-class)$
                    \renewcommand\bibname{$biblio-title$}
                $else$
                    \renewcommand\refname{$biblio-title$}
                $endif$
            $endif$
            \singlespacing
            \bibliography{$for(bibliography)$$bibliography$$sep$,$endfor$}
        $endif$
    $endif$

    $if(biblatex)$
        \printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$
    $endif$

    $for(include-after)$
        $include-after$
    $endfor$
\end{document}

